!function(){"use strict";class t{constructor(){this.animationState="idle",this.animations=[],this.animationQueue=[],this.animationTripper=-1,this.attack=0,this.block=0,this.aniPlaying=!1,this.aniCheckQueue=[]}animationFramesSetter(){this.animationStates.forEach((t=>{let i={loc:[],src:t.src};for(let e=0;e<t.frames;e++){let t=e*this.spriteWidth,s=0;i.loc.push({x:t,y:s})}this.animations[t.name]=i}))}draw(t,i,e,s){let n=i/e%this.animations[this.animationState].loc.length,a=Math.floor(n);"dead"!==this.animationState&&("idle"!==this.animationState&&(this.aniCheckQueue.push(a),this.aniCheckQueue.filter(((t,i,e)=>e.indexOf(t)===i)).length>1&&0===this.aniCheckQueue.at(-1)&&"idle"!==this.animationState&&(this.animationQueueSetter(),this.aniCheckQueue=[])),this.animationQueue.length>0&&"idle"===this.animationState&&(this.animationQueueSetter(),a=0));let h=this.spriteWidth*a,r=this.animations[this.animationState].loc[a].y;t.drawImage(this.image,h,r,this.spriteWidth,this.spriteHeight,this.xPosition,this.yPosition-s,Math.floor(this.spriteWidth*this.sizeCoef),Math.floor(this.spriteHeight*this.sizeCoef))}heal(t){this.health+t>this.maxHealth?this.health=this.maxHealth:this.health+=t}animationQueueSetter(){if(0===this.animationQueue.length)this.animation("idle");else{let t=this.animationQueue.shift();this.animation(t)}}framesFinder(t){for(let i in this.animationStates){let e=this.animationStates[i];if(e.name===t)return e.frames}}animation=function(t){this.animationState=t,this.image.src=this.animations[t].src}}t.prototype.runForwards=function(){this.xPosition+=1.12,this.yPosition=400};class i{constructor(t,i){this.combatant=t,this.stack=[],this.allUniqueCards={},this.deckMaker(i),this.graveyard=0,this.fullDeck=new Image,this.fullDeck.src="./dist/art/deck/full_deck.png",this.halfDeck=new Image,this.halfDeck.src="./dist/art/deck/half_deck.png",this.emptyDeck=new Image,this.emptyDeck.src="./dist/art/deck/empty_deck.png"}deckMaker(t){let i,e;console.log(this.combatant.constructor.name),"Knight"===this.combatant.name?(e=this.playerCards(this.combatant),i=!1):(e=this.opponentCards(this.combatant),i=!0);let s=Object.keys(e);for(let t=0;t<s.length;t++){let i=e[s[t]],n=new Image;n.src=i.src,i.art=n,this.allUniqueCards[s[t]]=i}for(let e=0;e<t;e++){let t;if(i){let i=Object.keys(this.allUniqueCards);t=this.allUniqueCards[i[i.length*Math.random()<<0]]}else t=this.allUniqueCards[s[e]];this.stack.push(t)}i?this.pruneDeck():this.shuffleDeck()}pruneDeck(){let t,i=[],e=this.allUniqueCards.blindingFlash,s=this.allUniqueCards.groundPound;for(let s=0;s<this.stack.length-3;s++){let n=this.stack[s];t&&n===e?t--:(n===e&&(t=3),i.push(n))}for(let e=0;e<i.length-3;e++){let n=i[e];t&&n===s?t--:(n===s&&(t=3),this.stack.unshift(n))}}shuffleDeck(){for(let t=this.stack.length-1;t>0;t--){const i=Math.floor(Math.random()*(t+1)),e=this.stack[t];this.stack[t]=this.stack[i],this.stack[i]=e}}playerCards(t){return{strike:{id:"strike",attack:function(){return 4},block:function(){return 0},src:"./dist/art/knight_cards/strike.png",animation:"attack",instantEffects:function(){},delayedEffects:function(){}},defend:{id:"defend",attack:function(){return 0},block:function(){return 5},src:"./dist/art/knight_cards/defend.png",animation:"attack2",instantEffects:function(){},delayedEffects:function(){}},reposition:{id:"reposition",attack:function(){return 0},block:function(){return 2},src:"./dist/art/knight_cards/reposition.png",animation:"duck",instantEffects:function(){},delayedEffects:function(){this.numCardsDraw+=1}},taunt:{id:"taunt",attack:function(){return 0},block:function(){return 4},src:"./dist/art/knight_cards/taunt.png",animation:"duck",instantEffects:function(){},delayedEffects:function(){this.opponent.nextMove[1]=this.opponent.allUniqueCards.strike}},parry:{id:"parry",attack:function(){return 0},block:function(){return 0},src:"./dist/art/knight_cards/parry.png",animation:"combo",instantEffects:function(){this.opponentCard.attack&&(this.opponentCard.attack=function(){return 0},this.opponent.health-=4,this.numCardsDraw+=1)},delayedEffects:function(){}},shieldShatter:{id:"shieldShatter",attack:function(){return 0},block:function(){return 0},src:"./dist/art/knight_cards/shield_shatter.png",animation:"attack2",instantEffects:function(){this.opponent.health-=2*this.opponentCard.block(),this.numCardsDraw+=1},delayedEffects:function(){}},shieldOfFaith:{id:"shieldOfFaith",attack:function(){return 0},block:function(){return 5},src:"./dist/art/knight_cards/shield_of_faith.png",animation:"attack2",instantEffects:function(){},delayedEffects:function(){this.knight.status.damageImmune=!0,this.knight.status.ttdamageImmune=1}},dodge:{id:"dodge",attack:function(){return 0},block:function(){return 0},src:"./dist/art/knight_cards/dodge.png",animation:"roll",instantEffects:function(){},delayedEffects:function(){this.opponent.attack>this.knight.block&&(this.knight.health+=this.opponent.attack-this.knight.block)}},secondWind:{id:"secondWind",attack:function(){return 0},block:function(){return 8},src:"./dist/art/knight_cards/second_wind.png",animation:"duck",instantEffects:function(){this.knight.heal(8)},delayedEffects:function(){this.numCardsDraw+=1}},feint:{id:"feint",attack:function(){return 0},block:function(){return 0},src:"./dist/art/knight_cards/feint.png",animation:"crouchAttack",instantEffects:function(){this.opponentCard=this.opponent.allUniqueCards.turtle},delayedEffects:function(){}},revengeance:{id:"revengeance",attack:function(){return 2*this.knight.deckObj.graveyard+2},block:function(){return 0},src:"./dist/art/knight_cards/revengeance.png",animation:"combo",instantEffects:function(){},delayedEffects:function(){}},mightyBlow:{id:"mightyBlow",attack:function(){return 8},block:function(){return 0},src:"./dist/art/knight_cards/mighty_blow.png",animation:"combo",instantEffects:function(){},delayedEffects:function(){}},forHonor:{id:"forHonor",attack:function(){return 3},block:function(){return 5},src:"./dist/art/knight_cards/for_honor.png",animation:"attack",instantEffects:function(){},delayedEffects:function(){this.numCardsDraw+=1}},poiseBreak:{id:"poiseBreak",attack:function(){return 4},block:function(){return 0},src:"./dist/art/knight_cards/poise_break.png",animation:"crouchAttack",instantEffects:function(){},delayedEffects:function(){this.knight.status.opponentPoiseBroken=!0,this.knight.status.ttopponentPoiseBroken=1}},holdTheLine:{id:"holdTheLine",attack:function(){return 0},block:function(){return 10},src:"./dist/art/knight_cards/hold_the_line.png",animation:"attack2",instantEffects:function(){},delayedEffects:function(){}}}}opponentCards(t){return{strike:{id:"strike",attack:function(){return 6},block:function(){return 0},src:"./dist/art/opponent_cards/mstrike.png",animation:"attack",instantEffects:function(){},delayedEffects:function(){}},rockThrow:{id:"rockThrow",attack:function(){return 8},block:function(){return 6},src:"./dist/art/opponent_cards/mrock_throw.png",animation:"attack",instantEffects:function(){},delayedEffects:function(){}},spikes:{id:"spikes",attack:function(){return 12},block:function(){return 0},src:"./dist/art/opponent_cards/mspikes.png",animation:"attack2",instantEffects:function(){},delayedEffects:function(){}},blindingFlash:{id:"blindingFlash",attack:function(){return 0},block:function(){return 0},src:"./dist/art/opponent_cards/mblinding_flash.png",animation:"flash",instantEffects:function(){},delayedEffects:function(){this.knight.status.blinded=!0,this.knight.status.ttblinded=2}},turtle:{id:"turtle",attack:function(){return 0},block:function(){return 4},src:"./dist/art/opponent_cards/mturtle.png",animation:"idle",instantEffects:function(){this.opponent.heal(4)},delayedEffects:function(){}},groundPound:{id:"groundPound",attack:function(){return 0},block:function(){return 0},src:"./dist/art/opponent_cards/mground_pound.png",animation:"attack3",instantEffects:function(){},delayedEffects:function(){document.querySelectorAll(".card-slot");let t=this.cardSlotCollector("filled");if(t.length)for(let i=1;1===i&&t.length>0;i++){let i=Math.floor(Math.random()*t.length),e=t.splice(i,1);this.clearCardFromSlot(e),this.knight.deckObj.graveyard--}}}}}thinDeck(){let t=document.getElementById("deck-slot");0===this.deck.length?t.innerHTML='<img src="./dist/art/deck/rune.png" id="deckArt" width="160px" height="260px"/>':this.deck.length<3?t.innerHTML='<img src="'+this.deckObj.emptyDeck.src+'" id="deckArt" width="140px" height="200px"/>':this.deck.length<6&&(t.innerHTML='<img src="'+this.deckObj.halfDeck.src+'" id="deckArt" width="140px" height="200px"/>')}}class e extends t{constructor(){super(),this.name="Knight",this.image=new Image,this.image.src="./dist/art/knight1/Idle.png",this.spriteWidth=419.5,this.spriteHeight=280,this.xPosition=-280,this.yPosition=400,this.sizeCoef=1,this.maxHealth=30,this.health=this.maxHealth,this.deckObj=new i(this,15),this.deck=this.deckObj.stack,this.allUniqueCards=this.deckObj.allUniqueCards,this.animationStates=[{name:"idle",frames:10,src:"./dist/art/knight1/Idle.png"},{name:"attack",frames:5,src:"./dist/art/knight1/Attack.png"},{name:"attack2",frames:6,src:"./dist/art/knight1/Attack2nm.png"},{name:"combo",frames:10,src:"./dist/art/knight1/AttackCombonm.png"},{name:"death",frames:10,src:"./dist/art/knight1/Death.png"},{name:"dead",frames:1,src:"./dist/art/knight1/Dead.png"},{name:"roll",frames:12,src:"./dist/art/knight1/Roll.png"},{name:"duck",frames:3,src:"./dist/art/knight1/CrouchAll.png"},{name:"crouchAttack",frames:6,src:"./dist/art/knight1/CrouchAttack.png"},{name:"hit",frames:6,src:"./dist/art/knight1/Hit.png"},{name:"run",frames:10,src:"./dist/art/knight1/Run.png"}],this.animationFramesSetter(),this.status={blinded:!1,ttblinded:0,rrblinded:"Blinded",opponentPoiseBroken:!1,ttopponentPoiseBroken:0,rropponentPoiseBroken:"Double damage",damageImmune:!1,ttdamageImmune:0,rrdamageImmune:"Damage immune"}}}e.prototype.statusChecker=function(t,i){return"attack"===i&&this.status.opponentPoiseBroken?2*t:t};class s extends t{constructor(){super(),this.name="Opponent",this.image=new Image,this.image.src="./dist/art/demon/Idle.png",this.spriteWidth=500,this.spriteHeight=400,this.sizeCoef=1,this.xPosition=300,this.yPosition=319,this.animationTripper=-1,this.animationQueue=[],this.deckObj=new i(this,100),this.nextMove=this.deckObj.stack,this.allUniqueCards=this.deckObj.allUniqueCards,this.nextMove[1]=this.allUniqueCards.blindingFlash,this.maxHealth=30,this.health=this.maxHealth,this.attack=this.nextMove[0].attack.call(this),this.block=this.nextMove[0].block.call(this),this.animationStates=[{name:"idle",frames:6,src:"./dist/art/demon/Idle.png"},{name:"attack",frames:5,src:"./dist/art/demon/Attack.png"},{name:"attack2",frames:6,src:"./dist/art/demon/Attack2.png"},{name:"attack3",frames:6,src:"./dist/art/demon/Attack3.png"},{name:"hit",frames:3,src:"./dist/art/demon/Hit.png"},{name:"death",frames:4,src:"./dist/art/demon/Death.png"},{name:"dead",frames:1,src:"./dist/art/demon/Dead.png"},{name:"flash",frames:6,src:"./dist/art/demon/Flash.png"}],this.animationFramesSetter(),this.blindedCard={},this.blindedCard.art=new Image,this.blindedCard.art.src="./dist/art/opponent_cards/mblinded.png",this.status={}}}s.prototype.animation=function(t){this.animationState=t,this.image.src=this.animations[t].src,this.animationTripper=this.framesFinder(t)};class n{constructor(t){this.knight=new e,this.opponent=new s,this.crowd=t,this.numCardsDraw=0,this.gameOver=!1,this.gameWin=!1,this.gameLoss=!1,this.cardLoss=!1,this.playedCard=null,this.opponentCard=null}setupMat(){document.getElementById("deck-slot").innerHTML+='<img src="'+this.knight.deckObj.fullDeck.src+'" id="deckArt" width="140px" height="200px"/>';let t=this.knight.deck;for(let i=1;i<=5;i++){let e=t[i-1],s="card-slot"+i;document.getElementById(s).innerHTML+='<img src="'+e.src+'" id="'+e.id+'" class="card" + " width="280px" height="280px"/>'}this.knight.deck=t.slice(5,t.length)}coreGameLoop(t,i){this.clearCardFromSlot(i),this.playedCard=this.knight.allUniqueCards[t],this.opponentCard=this.opponent.nextMove[0],this.instantCardEffects(),this.statCalc(),this.damageCalc(),this.resolveStatusEffects.call(this.knight,this.knight),this.resolveStatusEffects.call(this.opponent,this.opponent),this.delayedCardEffects(),this.knight.animationQueue.push(this.playedCard.animation),this.opponent.animationQueue.push(this.opponentCard.animation),this.gameEndCheck(),this.crowd.excite(0),setTimeout((()=>{this.drawCards(),this.knight.deckObj.thinDeck.call(this.knight),this.opponent.nextMove.shift(),this.knight.attack=0,this.knight.block=0,this.opponent.attack=this.opponent.nextMove[0].attack.call(this),this.opponent.block=this.opponent.nextMove[0].block.call(this),this.playedCard=null,this.opponentCard=null}),1100)}statCalc(){this.knight.attack=this.knight.statusChecker.call(this.knight,this.playedCard.attack.call(this),"attack"),this.knight.block=this.playedCard.block.call(this),this.opponent.attack=this.opponentCard.attack.call(this),this.opponent.block=this.opponentCard.block.call(this)}gameEndCheck(){let t=0;for(;0===t;){if(t++,this.knight.health<1&&(this.gameLoss=!0),this.opponent.health<1){this.gameWin=!0;break}5===this.cardSlotCollector("empty").length&&0===this.numCardsDraw&&(this.gameLoss=!0,this.cardLoss=!0)}}damageCalc(){this.opponent.attack>this.knight.block&&!this.knight.status.damageImmune&&(this.knight.health-=this.opponent.attack-this.knight.block),this.knight.attack>this.opponent.block&&(this.opponent.health-=this.knight.attack-this.opponent.block,this.numCardsDraw+=1)}resolveStatusEffects(){let t=Object.keys(this.status);for(let i=0;i<t.length;i++){let e=t[i];if("tt"===e.slice(0,2)&&this.status[e]>0){let t=e.slice(2);this.status[e]-=1,0===this.status[e]&&(this.status[t]=!1)}}}instantCardEffects(){this.playedCard.instantEffects.call(this),this.opponentCard.instantEffects.call(this)}delayedCardEffects(t,i){this.playedCard.delayedEffects.call(this),this.opponentCard.delayedEffects.call(this)}clearCardFromSlot(t){document.getElementById(t).innerHTML="",this.knight.deckObj.graveyard++}addCardtoSlot(t){let i=document.getElementById(t);if(this.knight.deck.length>0){let t=this.knight.deck.shift();i.innerHTML+='<img src="'+t.src+'" id="'+t.id+'" class="card" width="280px" height="280px"/>'}}drawCards(){let t=this.cardSlotCollector("empty");for(let i=t.length-1;i>=0&&this.numCardsDraw>0;this.numCardsDraw--){let e=t[Math.abs(i-(t.length-1))];this.addCardtoSlot(e),i--}this.numCardsDraw=0}cardSlotCollector(t){let i=document.querySelectorAll(".card-slot"),e=[];for(let s=0;s<i.length;s++){let n=i[s];"empty"===t?n.firstChild||e.push(n.id):n.firstChild&&e.push(n.id)}return e}}class a{constructor(t){this.heightOffset=t,this.leftImg=new Image,this.leftImg.src="./dist/art/crowd_left.png",this.rightImg=new Image,this.rightImg.src="./dist/art/crowd_right.png",this.crowdArray=[],this.excitement=75,this.populateSection(),this.updateYImmediate(t),this.calmDown()}sectionBoundaries(){return{farLeft:{xLow:0,xHigh:120,yLow:350,yHigh:415,spectArr:[],img:this.rightImg,size:38,pop:10},midLeft:{xLow:240,xHigh:400,yLow:360,yHigh:400,spectArr:[],img:this.rightImg,size:38,pop:10},midRight:{xLow:500,xHigh:680,yLow:360,yHigh:400,spectArr:[],img:this.leftImg,size:38,pop:10},farRight:{xLow:780,xHigh:900,yLow:350,yHigh:415,spectArr:[],img:this.leftImg,size:38,pop:10},midRightBalc:{xLow:500,xHigh:660,yLow:275,yHigh:300,spectArr:[],img:this.leftImg,size:25,pop:15},midleftBalc:{xLow:300,xHigh:490,yLow:275,yHigh:300,spectArr:[],img:this.rightImg,size:25,pop:15},farleftBalc:{xLow:10,xHigh:300,yLow:260,yHigh:278,spectArr:[],img:this.rightImg,size:25,pop:15},farrightBalc:{xLow:600,xHigh:900,yLow:260,yHigh:278,spectArr:[],img:this.leftImg,size:25,pop:15},midrightNosebleed:{xLow:400,xHigh:700,yLow:185,yHigh:200,spectArr:[],img:this.leftImg,size:18,pop:20},midleftNosebleed:{xLow:200,xHigh:500,yLow:185,yHigh:200,spectArr:[],img:this.rightImg,size:18,pop:20},farleftNosebleed:{xLow:100,xHigh:400,yLow:170,yHigh:180,spectArr:[],img:this.rightImg,size:18,pop:12},farrightNosebleed:{xLow:500,xHigh:800,yLow:170,yHigh:180,spectArr:[],img:this.leftImg,size:18,pop:12}}}populateSection(){let t=this.sectionBoundaries();for(let i in t){let e=t[i],s=e.xHigh-e.xLow,n=e.yHigh-e.yLow;for(let t=0;t<=e.pop;t++){let t={img:e.img},i=Math.floor(Math.random()*n)+e.yLow;t.yRender=i,t.yCore=i,t.xRender=Math.floor(Math.random()*s)+e.xLow,t.sizeX=Math.floor(10*Math.random())+e.size,t.sizeY=Math.floor(10*Math.random())+e.size,e.spectArr.push(t)}e.spectArr.sort(((t,i)=>t.posY-i.posY)),this.crowdArray.push(e)}}jostle(){for(let t=0;t<this.crowdArray.length;t++){let i=this.crowdArray[t].spectArr,e=this.crowdArray[t],s=e.xHigh,n=e.xLow,a=e.yHigh,h=e.yLow;for(let t=0;t<i.length;t++){let r=Math.floor(Math.random()*this.excitement),o=Math.floor(Math.random()*(this.excitement+10));if(0===r){let r=i[t];r.yCore+=Math.floor(3*Math.random())-1,0===o&&(r.xRender+=Math.floor(3*Math.random())-1),r.yCore>e.yHigh&&(r.yCore=a),r.yCore<e.yLow&&(r.yCore=h),r.xRender>e.xHigh&&(r.xRender=s),r.xRender<e.xLow&&(r.xRender=n)}}i.sort(((t,i)=>t.posY-i.posY))}}calmDown(){setInterval((()=>{this.excitement<75&&(this.excitement+=1)}),2e3)}excite(t){this.excitement=t}hush(){this.excitement=75}updateYImmediate(t){for(let i=0;i<this.crowdArray.length;i++){let e=this.crowdArray[i].spectArr;for(let i=0;i<e.length;i++){let s=e[i];s.yRender=s.yCore-t,s.yRender=s.yCore-t}e.sort(((t,i)=>t.yRender-i.yRender))}}}class h{constructor(t,i,e){this.ctx=i,this.heightOffset=e,this.game=t,this.panelDrop=0,this.knight=new Image,this.knight.src="./dist/art/knight1/Idle.png",this.leading=38,this.archibald=new Image,this.archibald.src="./dist/art/knight1/archie.png",this.playerCard=new Image,this.playerCard.src="./dist/art/knight_cards/strike.png",this.opponentCard=new Image,this.opponentCard.src="./dist/art/knight_cards/reposition.png",this.tutorialSeq=0}renderTutorial(){1===this.tutorialSeq?this.renderTutorialPanel1():2===this.tutorialSeq?this.renderTutorialPanel2():3===this.tutorialSeq?this.renderTutorialPanel3():4===this.tutorialSeq&&this.renderTutorialPanel4()}renderTutorialPanel1(){let t=140;this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(150,75,650,this.panelDrop),this.panelDrop<400&&(this.panelDrop+=6.5),this.panelDrop>=400&&(this.ctx.drawImage(this.knight,0,0,419.5,280,275,170,419.5,280),this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="26px optima, sans-serif ",this.ctx.fillText("You are",200,t,2e3,200),this.ctx.font="bold 26px optima, sans-serif ",this.ctx.fillText("Solaire",293,t,2e3,200),this.ctx.font="26px optima, sans-serif ",this.ctx.fillText(", a stalwart knight seeking to",370,t,2e3,200),this.ctx.fillText("prove your worth against the mightiest champions",200,t+=this.leading,2e3,200),this.ctx.fillText("of the land. You have come to the Queen’s ",200,t+=this.leading,2e3,200),this.ctx.fillText("tournament at Dragonstone Arena to battle for ",200,t+=this.leading,2e3,200),this.ctx.fillText("fame and fortune. ",200,t+=this.leading,2e3,200))}renderTutorialPanel2(){let t=140;this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(150,75,650,400),this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="26px optima, sans-serif",this.ctx.fillText("Unfortunately, your first opponent is Sir Archibald,",200,t,2e3,200),this.ctx.fillText("a powerful and deadly knight.",200,t+=this.leading,2e3,200),this.ctx.fillText("Defeat is pretty much certain.",200,t+=2*this.leading,2e3,200),this.ctx.drawImage(this.archibald,0,0,120,100,235,170,420,350)}renderTutorialPanel3(){let t=140;this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(150,75,650,500),this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="bold 26px optima, sans-serif",this.ctx.fillText("Core Mechanics",200,t,2e3,200),this.ctx.font="26px optima, sans-serif",this.ctx.fillText("The cards represent the moves you can make,",200,t+=this.leading,2e3,200),this.ctx.fillText("click on a card to play it.",200,t+=this.leading,2e3,200),this.ctx.fillText("Your opponent plays their cards at the same time.",200,t+=this.leading,2e3,200),this.ctx.drawImage(this.playerCard,340,245,130,200),this.ctx.drawImage(this.opponentCard,480,245,130,200),this.ctx.fillText("To deal damage, your attack must be higher than",200,t+=2*this.leading+140,2e3,200),this.ctx.fillText("your opponent’s block.",200,t+=this.leading,2e3,200)}renderTutorialPanel4(){let t=140;this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(150,75,650,500),this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="bold 26px optima, sans-serif",this.ctx.fillText("Core Mechanics",200,t,2e3,200),this.ctx.font="26px optima, sans-serif",this.ctx.fillText("You draw a card whenever you deal damage.",200,t+=this.leading,2e3,200),this.ctx.fillText("Watch out! You die if you run out of cards.",200,t+=this.leading,2e3,200)}}class r extends t{constructor(t,i,e,s,n){super(),this.image=new Image,this.image.src="./dist/art/knight1/aIdle.png",this.animationState="knightIdle",this.spriteWidth=t,this.spriteHeight=i,this.xPosition=e,this.yPosition=s,this.sizeCoef=n,this.smash=!1,this.animationStates=[{name:"knightIdle",frames:9,src:"./dist/art/knight1/aIdle.png"},{name:"knightTIdle",frames:9,src:"./dist/art/knight1/aIdleTurned.png"},{name:"knightDeath",frames:10,src:"./dist/art/knight1/aDeath.png"},{name:"knightRun",frames:10,src:"./dist/art/knight1/aRun.png"},{name:"knighTurn",frames:2,src:"./dist/art/knight1/aTurnAround.png"},{name:"demonLeap",frames:1,src:"./dist/art/demon/Leap.png"},{name:"demonSmash",frames:1,src:"./dist/art/demon/Smash.png"},{name:"demonIdle",frames:6,src:"./dist/art/demon/Idle.png"}],this.animationFramesSetter()}draw(t,i,e,s){let n=i/e%this.animations[this.animationState].loc.length,a=Math.floor(n),h=this.spriteWidth*a,r=this.animations[this.animationState].loc[a].y;t.drawImage(this.image,h,r,this.spriteWidth,this.spriteHeight,this.xPosition,this.yPosition-s,Math.floor(this.spriteWidth*this.sizeCoef),Math.floor(this.spriteHeight*this.sizeCoef))}leap(){this.xPosition>300?(this.xPosition-=8,this.yPosition+=8):(this.xPosition=300,this.yPosition=319,this.smash=!0)}}const o=document.getElementById("canvas1"),c=document.getElementById("mat");let l=document.documentElement.clientHeight;const d=new class{constructor(t,i){this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.pauseInputs=!1,this.crowd=new a,this.crowdArray=this.crowd.crowdArray,this.MAX_HEIGHT=708,this.MIN_HEIGHT=578,this.CANVAS_WIDTH=this.canvas.width=950,this.setHeight(i),this.infoDimensions={infoSquareYOffset:200,infoSquareXOffset:274,infoSquareLen:200,infoSquareHeight:400},this.backgroundImage=new Image,this.backgroundImage.src="./dist/art/arena.jpg",this.matImage=new Image,this.matImage.src="./dist/art/mat.png",this.lossText=new Image,this.lossText.src="./dist/art/youded.png",this.winText=new Image,this.winText.src="./dist/art/youwin.png",this.gameStart=!1,this.tutorialStart=!1,this.playIntroAnimation=!1,this.gameFrame=0,this.staggerFrames=14,this.hoveredCard=null,this.showNextHover=!0,this.showDeckLength=!1,this.fadeOut=0,this.textFadeIn=1,this.game=new n(this.crowd),this.knight=this.game.knight,this.opponent=this.game.opponent,this.dummy=new r(120,80,310,358,4),this.demonDummy=new r(500,400,919,-300,1),this.demonDummy.animationState="demonLeap",this.demonDummy.image.src=this.dummy.animations.demonLeap.src,this.tutorial=new h(this.game,this.ctx,this.heightOffset),this.titleCard(),this.introAnimationSeq=1,this.shaking=!1,this.shakeX=0,this.shakeY=0}shakeBackground(){this.shaking=!0,this.shakeX=Math.floor(5*Math.random())-20,this.shakeY=Math.floor(5*Math.random())-40,this.crowd.excite(0)}calmBackground(){!0===this.shaking&&(this.shakeX=0,this.shakeY=0,this.shaking=!1)}renderIntroAnimation(){this.introAnimationSeq<9&&(this.knight.draw(this.ctx,this.gameFrame,this.staggerFrames,this.heightOffset),this.dummy.draw(this.ctx,this.gameFrame,this.staggerFrames,this.heightOffset),this.introAnimationSeq>=6&&this.demonDummy.draw(this.ctx,this.gameFrame,this.staggerFrames,this.heightOffset),console.log(this.introAnimationSeq),1===this.introAnimationSeq?(this.crowd.excitement>=75&&this.crowd.excite(5),this.knight.xPosition<200?(this.knight.runForwards(),"idle"===this.knight.animationState&&this.knight.animationQueue.push("run")):(this.knight.animationQueue=[],this.knight.animationState="idle",this.knight.image.src=this.knight.animations.idle.src,setTimeout((()=>{this.dummy.animationState="knightTIdle",this.dummy.image.src=this.dummy.animations.knightTIdle.src,this.introAnimationSeq=2}),1e3))):2===this.introAnimationSeq?(this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(400,418,330,45),this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="26px optima, sans-serif ",this.ctx.fillText("You ready to die today, kid?",410,450,2e3,200),setTimeout((()=>{this.introAnimationSeq=3}),3e3)):3===this.introAnimationSeq?(this.shakeBackground(),setTimeout((()=>{this.calmBackground(),this.introAnimationSeq=4}),3e3)):4===this.introAnimationSeq?(this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(430,418,281,45),this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="26px optima, sans-serif ",this.ctx.fillText("What the hell was that?",440,450,2e3,260),setTimeout((()=>{this.introAnimationSeq=5}),3e3)):5===this.introAnimationSeq?(this.shakeBackground(),setTimeout((()=>{this.calmBackground(),5===this.introAnimationSeq&&(this.introAnimationSeq=6)}),3e3)):6===this.introAnimationSeq?this.introAnimationSeq=7:7===this.introAnimationSeq?((this.knight.animationState="idle")&&this.knight.animationQueue.push("roll"),this.demonDummy.leap(),this.demonDummy.smash&&(this.crowd.excite(0),this.demonDummy.animationState="demonSmash",this.demonDummy.image.src=this.demonDummy.animations.demonSmash.src,this.dummy.animationState="knightDeath",this.dummy.image.src=this.dummy.animations.knightDeath.src,this.shakeBackground(),setTimeout((()=>{this.introAnimationSeq=8}),300))):8===this.introAnimationSeq&&(setTimeout((()=>{this.calmBackground()}),300),this.gameStart=!0,this.playIntroAnimation=!1,this.introAnimationSeq=9),this.gameFrame++)}titleCard(){this.gameStart||this.tutorialStart||this.playIntroAnimation?this.tutorialStart?(this.ctx.clearRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.renderBackground(),this.renderCrowd(),this.tutorial.renderTutorial(),requestAnimationFrame(this.titleCard.bind(this))):this.playIntroAnimation?(this.ctx.clearRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.renderBackground(),this.renderCrowd(),this.renderIntroAnimation(),requestAnimationFrame(this.titleCard.bind(this))):this.gameStart&&(this.game.setupMat(),this.game.knight.xPosition=200,this.animate()):(this.ctx.clearRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.renderBackground(),this.renderCrowd(),this.renderStartOptions(),requestAnimationFrame(this.titleCard.bind(this)))}renderStartOptions(){this.ctx.fillStyle="rgba(0,0,0,.9)",this.ctx.fillRect(-10,130,2e3,120),this.ctx.fillRect(-10,290,2e3,70),this.ctx.fillRect(-10,390,2e3,70),this.ctx.fillStyle="rgba(255,87,51,0.35)",this.ctx.fillRect(-10,145,2e3,90),this.ctx.fillRect(-10,305,2e3,40),this.ctx.fillRect(-10,405,2e3,40),this.ctx.fillStyle="crimson",this.ctx.font="130px trattatello, sans-serif ",this.ctx.fillText("Demon Slayer",200,225),this.ctx.font="80px trattatello, sans-serif ",this.ctx.fillText("start",260,350),this.ctx.fillText("tutorial",260,450),this.ctx.beginPath(),this.ctx.moveTo(220,340),this.ctx.lineTo(245,325),this.ctx.lineTo(220,310),this.ctx.fill(),this.ctx.beginPath(),this.ctx.moveTo(220,440),this.ctx.lineTo(245,425),this.ctx.lineTo(220,410),this.ctx.fill()}renderCrowd(){for(let t=0;t<this.crowdArray.length;t++){let i=this.crowdArray[t].spectArr;for(let t=0;t<i.length;t++){let e=i[t];this.ctx.drawImage(e.img,e.xRender,e.yRender,e.sizeX,e.sizeY)}}this.crowd.jostle(),this.crowd.updateYImmediate(this.heightOffset)}animate(){this.ctx.clearRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.renderBackground(),this.renderCrowd(),(this.game.gameLoss||this.game.gameWin)&&this.renderGameEndScreen(),this.game.gameOver||(this.renderInfoSquares(),this.renderText(),this.hoveredCard&&this.showNextHover&&this.renderHoveredCard(this.hoveredCard)),this.renderCharacters(),this.endScreenAnimations(),this.gameFrame++,requestAnimationFrame(this.animate.bind(this))}renderBackground(){this.ctx.drawImage(this.backgroundImage,0,this.heightOffset+60,1024+this.shakeY,this.CANVAS_HEIGHT+this.shakeX,0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT)}renderInfoSquares(){let t;this.ctx.fillStyle="rgba(225,225,225,0.9)",this.ctx.fillRect(this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset,this.infoDimensions.infoSquareYOffset-this.heightOffset,this.infoDimensions.infoSquareLen,this.infoDimensions.infoSquareHeight),t=this.knight.status.blinded?this.opponent.blindedCard.art:this.opponent.nextMove[0].art,this.ctx.drawImage(t,this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+10,this.infoDimensions.infoSquareYOffset+120-this.heightOffset,180,280),this.ctx.fillRect(this.infoDimensions.infoSquareXOffset-this.infoDimensions.infoSquareLen,this.infoDimensions.infoSquareYOffset-this.heightOffset,this.infoDimensions.infoSquareLen,this.infoDimensions.infoSquareHeight)}renderText(){this.ctx.fillStyle="rgba(0,0,0,1)",this.ctx.font="26px optima, sans-serif ",this.ctx.fillText("Monster Health",this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+14,this.infoDimensions.infoSquareYOffset+40-this.heightOffset),this.knight.status.blinded?(this.ctx.fillText("Atk: ? Blk: ? ",this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+30,this.infoDimensions.infoSquareYOffset+110-this.heightOffset),this.ctx.fillText("?",this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+90,this.infoDimensions.infoSquareYOffset+75-this.heightOffset)):(this.ctx.fillText(`Atk: ${this.opponent.attack} Blk: ${this.opponent.block} `,this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+30,this.infoDimensions.infoSquareYOffset+110-this.heightOffset),this.ctx.fillText(this.opponent.health,this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+90,this.infoDimensions.infoSquareYOffset+75-this.heightOffset)),this.ctx.fillText("Move",this.CANVAS_WIDTH-this.infoDimensions.infoSquareXOffset+65,this.infoDimensions.infoSquareYOffset+150-this.heightOffset),this.ctx.fillText("Knight Health",this.infoDimensions.infoSquareXOffset-this.infoDimensions.infoSquareLen+21,this.infoDimensions.infoSquareYOffset+40-this.heightOffset),this.ctx.fillText(`Atk: ${this.knight.attack} Blk: ${this.knight.block} `,this.infoDimensions.infoSquareXOffset-this.infoDimensions.infoSquareLen+30,this.infoDimensions.infoSquareYOffset+110-this.heightOffset),this.ctx.fillText(this.game.knight.health,this.infoDimensions.infoSquareXOffset-this.infoDimensions.infoSquareLen+81,this.infoDimensions.infoSquareYOffset+75-this.heightOffset);let t=[];for(let i in this.knight.status)"tt"!==i.slice(0,2)&&"rr"!==i.slice(0,2)&&this.knight.status[i]&&t.push(i);let i=160;if(t.length){this.ctx.font="21px optima, sans-serif ",this.ctx.fillText("Status",this.infoDimensions.infoSquareXOffset-this.infoDimensions.infoSquareLen+30,this.infoDimensions.infoSquareYOffset+160-this.heightOffset);for(let e=0;e<t.length;e++){i+=30;let s=this.knight.status["rr"+t[e]];this.ctx.fillText(`${s}`,this.infoDimensions.infoSquareXOffset-this.infoDimensions.infoSquareLen+30,this.infoDimensions.infoSquareYOffset+i-this.heightOffset)}}this.showDeckLength&&(this.ctx.fillText(`${this.knight.deck.length} cards left`,800,650-this.heightOffset),this.ctx.beginPath(),this.ctx.moveTo(850,660-this.heightOffset),this.ctx.lineTo(870,680-this.heightOffset),this.ctx.lineTo(890,660-this.heightOffset),this.ctx.fill())}renderCharacters(){this.opponent.draw(this.ctx,this.gameFrame,this.staggerFrames,this.heightOffset),this.knight.draw(this.ctx,this.gameFrame,this.staggerFrames,this.heightOffset)}endScreenAnimations(){this.game.gameLoss&&this.game.gameWin&&!this.game.gameOver&&(this.staggerFrames=30,this.game.gameOver=!0,this.resetAnimationFrames(),this.knight.animationQueue.push("death"),this.opponent.animationQueue.push("death"),this.knight.animationQueue.push("dead"),this.opponent.animationQueue.push("dead")),this.game.gameLoss&&!this.game.gameOver&&(this.staggerFrames=30,this.game.gameOver=!0,this.resetAnimationFrames(),this.knight.animationQueue.push("death"),this.knight.animationQueue.push("dead")),this.game.gameWin&&!this.game.gameOver&&(this.staggerFrames=30,this.game.gameOver=!0,this.resetAnimationFrames(),this.opponent.animationQueue.push("death"),this.opponent.animationQueue.push("dead"))}resetAnimationFrames(){this.gameFrame=0}renderHoveredCard(t){let i;i=t.knightCard?this.knight.allUniqueCards[t.knightCard]:this.knight.status.blinded?this.opponent.blindedCard:this.opponent.nextMove[0],this.ctx.drawImage(i.art,this.CANVAS_WIDTH/2-195,this.CANVAS_HEIGHT/2-450+this.heightOffset/2,390,600)}renderGameEndScreen(){let t,i,e,s,n;this.game.gameLoss?(t=this.lossText,i=600,e=300,s=200,n=150):(t=this.winText,i=840,e=220,s=80,n=150),this.fadeOut+=.01,this.ctx.fillStyle=`rgba(0,0,0,${this.fadeOut})`,this.ctx.fillRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.fadeOut>1&&(this.textFadeIn-=.01,this.ctx.fillStyle=`rgba(0,0,0,${this.textFadeIn})`,this.ctx.drawImage(t,s,n-this.heightOffset,i,e),this.ctx.fillRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT))}setHeight(t){let i;t>950?(i=this.MAX_HEIGHT,this.heightOffset=0):t<820?(i=this.MIN_HEIGHT,this.heightOffset=130):(i=t-244,this.heightOffset=950-t),this.crowd.updateYImmediate(this.heightOffset),this.CANVAS_HEIGHT=this.canvas.height=i}}(o,l);c.addEventListener("click",(t=>{if(!d.game.gameOver&&!d.pauseInputs){d.showNextHover=!1,d.pauseInputs=!0;let i=t.target.parentNode;if("card-slot"===i.className){let e=t.target.id;d.resetAnimationFrames(),d.game.coreGameLoop(e,i.id),d.hoveredCard=null,setTimeout((()=>{d.pauseInputs=!1}),1500)}}})),c.addEventListener("mouseover",(t=>{if("card-slot"===t.target.parentNode.className){let i=t.target.id,e=d.knight.allUniqueCards[i];d.knight.block=e.block.call(d.game),d.knight.attack=d.knight.statusChecker.call(d.knight,e.attack.call(d.game),"attack"),d.hoveredCard={knightCard:i}}})),c.addEventListener("mouseout",(t=>{d.showNextHover=!0,"card-slot"===t.target.parentNode.className&&(d.hoveredCard=null,d.pauseInputs||(d.knight.attack=0,d.knight.block=0))})),o.addEventListener("mousemove",(t=>{let i=(document.documentElement.clientWidth-d.CANVAS_WIDTH)/2;!0===d.gameStart&&document.documentElement.clientWidth>=1e3&&(t.clientX>718+i&&t.clientX<840+i&&t.clientY>375-d.heightOffset&&t.clientY<580-d.heightOffset?(d.showNextHover=!0,d.knight.status.blinded?d.hoveredCard=d.opponent.blindedCard:d.hoveredCard={opponentCard:d.opponent.nextMove.id}):d.hoveredCard=null)})),c.addEventListener("mouseover",(t=>{"deck-slot"===t.target.parentNode.id&&(d.showDeckLength=!0,d.showNextHover=!1)})),c.addEventListener("mouseout",(t=>{"deck-slot"===t.target.parentNode.id&&(d.showDeckLength=!1,d.showNextHover=!1)})),addEventListener("resize",(t=>{let i=document.documentElement.clientHeight;d.setHeight(i)})),o.addEventListener("click",(t=>{if(!d.gameStart||!d.playIntroAnimation){let i=(document.documentElement.clientWidth-d.CANVAS_WIDTH)/2;t.clientX>220+i&&t.clientX<400+i&&t.clientY>320&&t.clientY<350?d.gameStart=!0:t.clientX>220+i&&t.clientX<425+i&&t.clientY>400&&t.clientY<450&&(d.tutorialStart=!0),d.tutorialStart&&(d.tutorial.tutorialSeq+=1,5===d.tutorial.tutorialSeq&&(d.playIntroAnimation=!0,d.tutorialStart=!1))}}))}();